{
  "name": "lodash-deep",
  "version": "1.6.0",
  "description": "Lodash mixins for (deep) object accessing / manipulation.",
  "main": "lodash-deep.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "lodash": ">=2.4.1"
  },
  "devDependencies": {
    "gulp": "~3.8.8",
    "gulp-jasmine": "^1.0.1",
    "gulp-rename": "~1.2.0",
    "gulp-uglify": "~1.0.1",
    "karma": "~0.12.23",
    "karma-jasmine": "~0.1.5",
    "karma-chrome-launcher": "~0.1.4",
    "karma-sauce-launcher": "^0.2.10"
  },
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/marklagendijk/lodash-deep.git"
  },
  "keywords": [
    "lodash",
    "mixin",
    "mixins",
    "deep",
    "object",
    "walking"
  ],
  "author": {
    "name": "Mark Lagendijk",
    "email": "mark@lagendijk.info"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/marklagendijk/lodash-deep/issues"
  },
  "homepage": "https://github.com/marklagendijk/lodash-deep",
  "readme": "# lodash-deep \r\n> Lodash mixins for (deep) object accessing / manipulation.\r\n\r\n[![Bower version][bower-image]][bower-url] [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Sauce Test Status][sauce-image]][sauce-url] [![Dependency Status][depstat-image]][depstat-url]\r\n\r\n\r\n## Compatibility\r\nlodash-deep is currently compatible with:\r\n- Node.js\r\n- All ES5 compatible browsers (IE9+, Chrome, Firefox, Safari etc)\r\n\r\n## Installation\r\n### Bower\r\n1. `bower install lodash-deep`\r\n2. Reference `lodash-deep.min.js` after `lodash.min.js`\r\n\r\n### Node.js\r\n1. `npm install lodash`\r\n2. `npm install lodash-deep`\r\n3. \r\n    ``` javascript\r\n\r\n    var _ = require(\"lodash\");\r\n    _.mixin(require(\"lodash-deep\"));\r\n    ```\r\n\r\n## Docs\r\nThe following mixins are included in `lodash-deep`:\r\n- [_.deepSet](#_deepsetcollection-propertypath-value)\r\n- [_.deepGet](#_deepgetcollection-propertypath)\r\n- [_.deepDefault](#_deepdefaultcollection-propertypath-defaultvalue)\r\n- [_.deepOwn](#_deepowncollection-propertypath)\r\n- [_.deepPluck](#_deeppluckcollection-propertypath)\r\n- [_.deepIn](#_deepincollection-propertypath)\r\n- [_.deepHas](#_deephascollection-propertypath)\r\n- [_.deepCall](#_deepcallcollection-propertypath-thisarg-arg)\r\n- [_.deepApply](#_deepapplycollection-propertypath-thisarg-args)\r\n- [_.deepMapValues](#_deepmapvaluesobject-propertypath)\r\n- [_.deepFindIndex](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFindLastIndex](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFirst](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFlatten](#_deeppluckstylecollection-propertypath)\r\n- [_.deepInitial](#_deeppluckstylecollection-propertypath)\r\n- [_.deepLast](#_deeppluckstylecollection-propertypath)\r\n- [_.deepLastIndexOf](#_deeppluckstylecollection-propertypath)\r\n- [_.deepRemove](#_deeppluckstylecollection-propertypath)\r\n- [_.deepRest](#_deeppluckstylecollection-propertypath)\r\n- [_.deepSortedIndex](#_deeppluckstylecollection-propertypath)\r\n- [_.deepUniq](#_deeppluckstylecollection-propertypath)\r\n- [_.deepCountBy](#_deeppluckstylecollection-propertypath)\r\n- [_.deepEvery](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFilter](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFind](#_deeppluckstylecollection-propertypath)\r\n- [_.deepGroupBy](#_deeppluckstylecollection-propertypath)\r\n- [_.deepIndexBy](#_deeppluckstylecollection-propertypath)\r\n- [_.deepMax](#_deeppluckstylecollection-propertypath)\r\n- [_.deepMin](#_deeppluckstylecollection-propertypath)\r\n- [_.deepReject](#_deeppluckstylecollection-propertypath)\r\n- [_.deepSome](#_deeppluckstylecollection-propertypath)\r\n- [_.deepSortBy](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFindKey](#_deeppluckstylecollection-propertypath)\r\n- [_.deepFindLastKey](#_deeppluckstylecollection-propertypath)\r\n\r\n### propertyPath\r\nNearly all methods of this library have the `propertyPath` parameter. This parameter defines the location of the nested value(s) and can be either a single `string` or an `array`.\r\n\r\n**When an array is specified**, each value should be a property name or array index and there is no need to escape special characters.\r\n\r\n```javascript\r\nvar obj = { level1: { 'lev\\\\el2': { 'lev.el3': { 'level4]': [ 'value' ] }}}};\r\nvar path2Value = ['level1', 'lev\\\\el2', 'lev.el3', 'level4]', '0'];\r\n```\r\n\r\n**When a string is specified**, it is split on unescaped `.`, `[` and `]` characters to create an array of property names. If a property name contains one of these characters, it must be escaped with a `\\` (which must be typed as `\\\\` in a string literal). The helper method `_.deepEscapePropertyName` is provided to assist with this.\r\n\r\n```javascript\r\n// basic property names\r\nvar obj = { level1: { level2: [ 'value' ] }};\r\nvar path2Value = 'level1.level2[0]';\r\n```\r\n\r\n```javascript\r\n// complex property names\r\nvar obj = { 'lev.el1': { 'lev\\\\el2': { `lev[e]l3`: [ 'value' ] }}};\r\n\r\n// using a manually escaped string\r\nvar path2Value = 'lev\\\\.el1.lev\\\\\\\\el2.lev\\\\[e\\\\]l3[0]';\r\n\r\n// using a programatically escaped string\r\nvar path2Value =\r\n    _.deepEscapePropertyName('lev.el1') + '.' +\r\n    _.deepEscapePropertyName('lev\\\\el2') + '.' +\r\n    _.deepEscapePropertyName('lev[e]l3') + '[' + 0 + ']';\r\n```\r\n\r\n### _.deepSet(collection, propertyPath, value)\r\nSets a value of a property in an object tree. Any missing objects/arrays will be created.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### value\r\nType: `*`\r\n\r\nThe value to set.\r\n\r\n#### returns\r\nType: `Object`\r\n\r\n``` javascript\r\nvar object = {};\r\n_.deepSet(object, 'level1.level2.level3.value', 'value 3');\r\n// -> { level1: { level2: { level3: { value: 'value 3' }}}}\r\n_.deepSet(object, 'level1.level2.level3.value', 'foo');\r\n// -> { level1: { level2: { level3: { value: 'foo' }}}}\r\n```\r\n\r\n### _.deepGet(collection, propertyPath)\r\nRetrieves the value of a property in an object tree.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### returns\r\nType: `*|undefined`\r\n\r\nThe value, or undefined if it doesn't exists.\r\n\r\n``` javascript\r\nvar object = {\r\n    level1: {\r\n        value: 'value 1',\r\n        level2: Object.create({\r\n            level3: {\r\n                value: 'value 3'\r\n            }\r\n        })\r\n    }\r\n};\r\n_.deepGet(object, 'level1.value');\r\n// -> 'value 1'\r\n_.deepGet(object, 'level1.level2.level3.value');\r\n// -> 'value 3'\r\n_.deepGet(object, 'foo.bar.baz');\r\n// -> undefined\r\n```\r\n\r\n### _.deepDefault(collection, propertyPath, defaultValue)\r\nChecks if the value at the propertyPath resolves to undefined, and sets it to defaultValue if this is the case.\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### defaultValue\r\nType: `*`\r\n\r\nThe default value.\r\n\r\n#### returns\r\nType: `*`\r\n\r\nEither the existing, unchanged value, or the new (default) value.\r\n\r\n``` javascript\r\nvar object = {\r\n    some: {\r\n        property: 'someValue'\r\n    }\r\n};\r\n_.deepDefault(object, 'some.property', 'defaultValue');\r\n// -> 'someValue'\r\n_.deepDefault(object, 'some.non.existent.property', 'defaultValue');\r\n// -> 'defaultValue' (and object.some.non.existent.property === 'defaultValue')\r\n```\r\n\r\n### _.deepOwn(collection, propertyPath)\r\nRetrieves the value of a *own* property in an object tree.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### returns\r\nType: `*|undefined`\r\n\r\nThe value, or undefined if it doesn't exists.\r\n\r\n``` javascript\r\nvar object = {\r\n    level1: {\r\n        value: 'value 1',\r\n        level2: Object.create({\r\n            level3: {\r\n                value: 'value 3'\r\n            }\r\n        })\r\n    }\r\n};\r\n_.deepOwn(object, 'level1.value');\r\n// -> 'value 1'\r\n_.deepOwn(object, 'level1.level2.level3.value');\r\n// -> undefined\r\n_.deepOwn(object, 'foo.bar.baz');\r\n// -> undefined\r\n```\r\n\r\n### _.deepPluck(collection, propertyPath)\r\nExecutes a deep pluck on an collection of object trees.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe collection of object trees.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### returns\r\nType: `Array`\r\n\r\n``` javascript\r\nvar collection = [\r\n    { level1: { level2: { level3: { value: 1 }}}},\r\n    { level1: { level2: { level3: { value: 2 }}}},\r\n    { level1: { level2: { level3: { value: 3 }}}},\r\n    { level1: { level2: { level3: { value: 4 }}}},\r\n    { level1: { level2: {} }},\r\n    {}\r\n];\r\n_.deepPluck(collection, 'level1.level2.level3.value');\r\n// -> [ 1, 2, 3, 4, undefined, undefined ]\r\n```\r\n\r\n### _.deepIn(collection, propertyPath)\r\nExecutes a deep check for the existence of a property in an object tree.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### returns\r\nType: `boolean`\r\n\r\n``` javascript\r\nvar object = {\r\n    level1: {\r\n        level2: Object.create({\r\n            level3: {\r\n                value: 'value 3'\r\n            }\r\n        })\r\n    }\r\n};\r\n_.deepIn(object, 'level1');\r\n// -> true\r\n_.deepIn(object, 'level1.level2');\r\n// -> true\r\n_.deepIn(object, 'level1.level2.level3');\r\n// -> true\r\n_.deepIn(object, 'level1.level2.level3.value');\r\n// -> true\r\n```\r\n\r\n### _.deepHas(collection, propertyPath)\r\nExecutes a deep check for the existence of a *own* property in an object tree.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### returns\r\nType: `boolean`\r\n\r\n``` javascript\r\nvar object = {\r\n    level1: {\r\n        level2: Object.create({\r\n            level3: {\r\n                value: 'value 3'\r\n            }\r\n        })\r\n    }\r\n};\r\n_.deepHas(object, 'level1');\r\n// -> true\r\n_.deepHas(object, 'level1.level2');\r\n// -> true\r\n_.deepHas(object, 'level1.level2.level3');\r\n// -> false\r\n_.deepHas(object, 'level1.level2.level3.value');\r\n// -> false\r\n```\r\n\r\n### _.deepCall(collection, propertyPath, thisArg, arg)\r\nCalls a function located at the specified property path, if it exists.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### thisArg\r\nType: `Object`\r\n\r\nThe 'this' argument the function should be executed with.\r\n\r\n#### arg1 ... argN\r\nType: `*`\r\n\r\nOne of the arguments the function should be executed with. Can occur 0..n times.\r\n\r\n#### returns\r\nType: `*`\r\n\r\nThe result of executing the function if it exists, or undefined if the function doesn't exist.\r\n\r\n``` javascript\r\n_.deepCall(myObject, 'level1.level2.myFunc', myObject, 'arg1', 'arg2');\r\n// if it exists -> result of myObject.level1.level2.myFunc('arg1', 'arg2')\r\n// if it does not exist -> undefined\r\n```\r\n\r\n### _.deepApply(collection, propertyPath, thisArg, args)\r\nCalls a function located at the specified property path, if it exists.\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe root object/array of the object tree.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### thisArg\r\nType: `Object`\r\n\r\nThe 'this' argument the function should be executed with.\r\n\r\n#### args\r\nType: `Array`\r\n\r\nThe arguments the function should be executed with.\r\n\r\n#### returns\r\nType: `*`\r\n\r\nThe result of executing the function if it exists, or undefined if the function doesn't exist.\r\n\r\n``` javascript\r\nvar args = ['arg1', 'arg2'];\r\n_.deepApply(myObject, 'level1.level2.myFunc', myObject, args);\r\n// if it exists -> result of myObject.level1.level2.myFunc('arg1', 'arg2')\r\n// if it does not exist -> undefined\r\n```\r\n\r\n### _.deepMapValues(object, propertyPath)\r\nMaps all values in an object tree and returns a new object with the same structure as the original.\r\n\r\n#### object\r\nType: `Object`\r\n\r\nThe root object of the object tree.\r\n\r\n#### callback\r\nType: `Function`\r\n\r\nThe function to be called per iteration on any non-object value in the tree.\r\n\r\nCallback is invoked with 2 arguments: `(value, propertyPath)`.\r\n\r\n`value` the value of the current property.\r\n\r\n`propertyPath` the [propertyPath](#propertypath) of the current property, in array format.\r\n\r\n#### returns\r\nType: `Object`\r\n\r\n``` javascript\r\nvar object = {\r\n    level1: {\r\n        value: 'value 1'\r\n        level2: {\r\n            value: 'value 2'\r\n            level3: {\r\n                value: 'value 3'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n_.deepMapValues(object, function(value, propertyPath){\r\n    return (propertyPath.join('.') + ' is ' + value)\r\n});\r\n\r\n/** ->\r\n *    {\r\n *        level1: {\r\n *            value: 'level1.value is value 1'\r\n *            level2: {\r\n *                value: 'level1.level2.value is value 2'\r\n *                level3: {\r\n *                    value: 'level1.level2.level3.value is value 3'\r\n *                }\r\n *            }\r\n *        }\r\n *    };\r\n */\r\n```\r\n\r\n### _.deepPluckStyle(collection, propertyPath)\r\nCollection of shorthand functions for executing a non-deep Lodash function with a \"_.deepPluck\" style callback:\r\n- _.deepFindIndex\r\n- _.deepFindLastIndex\r\n- _.deepFirst\r\n- _.deepFlatten\r\n- _.deepInitial\r\n- _.deepLast\r\n- _.deepLastIndexOf\r\n- _.deepRemove\r\n- _.deepRest\r\n- _.deepSortedIndex\r\n- _.deepUniq\r\n- _.deepCountBy\r\n- _.deepEvery\r\n- _.deepFilter\r\n- _.deepFind\r\n- _.deepGroupBy\r\n- _.deepIndexBy\r\n- _.deepMax\r\n- _.deepMin\r\n- _.deepReject\r\n- _.deepSome\r\n- _.deepSortBy\r\n- _.deepFindKey\r\n- _.deepFindLastKey\r\n\r\n#### collection\r\nType: `Object|Array`\r\n\r\nThe collection of object trees.\r\n\r\n#### propertyPath\r\nType: `string|Array`\r\n\r\nThe [propertyPath](#propertypath).\r\n\r\n#### returns\r\nType: `*`\r\n\r\nThe result of calling the original Lodash function with a \"_.deepPluck\" style callback.\r\n\r\n``` javascript\r\nvar collection = [\r\n    { level1: { level2: { level3: { value: 1 }}}},\r\n    { level1: { level2: { level3: { value: 2 }}}},\r\n    { level1: { level2: { level3: { value: 3 }}}},\r\n    { level1: { level2: { level3: { value: 4 }}}},\r\n    { level1: { level2: {} }},\r\n    {}\r\n];\r\n_.deepMax(collection, 'level1.level2.level3.value');\r\n// -> { level1: { level2: { level3: { value: 4 }}}}\r\n// === shorthand for\r\n_.max(collection, function(item){\r\n    return _.deepGet(item, 'level1.level2.level3.value');\r\n});\r\n```\r\n\r\n### Function name change\r\nIn version 1.2.0 function names were simplified. Backward compatibility with the old names remains in place.\r\n\r\n## Contributing\r\nPlease use the `canary` branch when creating a pull request.\r\n\r\n## Contributors\r\n- [Mark Lagendijk](https://github.com/marklagendijk)\r\n- [Andrew Luetgers](https://github.com/andrewluetgers)\r\n- [Nelson Pecora](https://github.com/yoshokatana)\r\n- [Mark Battersby](https://github.com/markalfred)\r\n- [Beau Gunderson](https://github.com/beaugunderson)\r\n- [Spencer](https://github.com/spenceralger)\r\n- [Paul](https://github.com/paulbalomiri)\r\n- [TheHalcyonSavant](https://github.com/TheHalcyonSavant)\r\n\r\n\r\n[bower-url]: https://github.com/marklagendijk/lodash-deep/releases/latest\r\n[bower-image]: https://badge.fury.io/bo/lodash-deep.svg\r\n\r\n[npm-url]: https://www.npmjs.org/package/lodash-deep\r\n[npm-image]: https://badge.fury.io/js/lodash-deep.svg\r\n\r\n[travis-url]: http://travis-ci.org/marklagendijk/lodash-deep\r\n[travis-image]: https://secure.travis-ci.org/marklagendijk/lodash-deep.svg?branch=master\r\n\r\n[sauce-url]: https://saucelabs.com/u/marklagendijk\r\n[sauce-image]: https://saucelabs.com/buildstatus/marklagendijk\r\n\r\n[depstat-url]: https://david-dm.org/marklagendijk/lodash-deep\r\n[depstat-image]: https://david-dm.org/marklagendijk/lodash-deep.svg\r\n",
  "readmeFilename": "README.md",
  "_id": "lodash-deep@1.6.0",
  "dist": {
    "shasum": "1a3c8d6e9f21c51774a0ebfa8b882e5f7a2b1b23"
  },
  "_from": "lodash-deep@^1.6.0",
  "_resolved": "https://registry.npmjs.org/lodash-deep/-/lodash-deep-1.6.0.tgz"
}
