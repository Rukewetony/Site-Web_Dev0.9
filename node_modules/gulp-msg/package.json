{
  "name": "gulp-msg",
  "description": "show command line messages",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/tamtakoe/gulp-msg"
  },
  "author": {
    "name": "tamtakoe",
    "email": "tamtakoe@gmail.com"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "notification"
  ],
  "license": "MIT",
  "dependencies": {
    "through2": "^0.6.3",
    "gulp-util": "^3.0.0",
    "lodash": "^3.0.0",
    "lodash-deep": "^1.6.0",
    "pretty-hrtime": "^1.0.0"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "bugs": {
    "url": "https://github.com/tamtakoe/gulp-msg/issues"
  },
  "homepage": "https://github.com/tamtakoe/gulp-msg",
  "main": "index.js",
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "readme": "# gulp-msg [![NPM version](https://badge.fury.io/js/gulp-msg.svg)](http://badge.fury.io/js/gulp-msg)\r\n\r\n> gulp plugin for command line notification\r\n\r\n## Install with [npm](npmjs.org)\r\n\r\n```sh\r\nnpm install gulp-msg\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar msg = require('gulp-msg');\r\n\r\nmsg.Info('--', 'Notice!', '*');\r\nmsg.Info   ('style: <%= name %>', {name: 'info'});\r\nmsg.Success('style: <%= name %>', {name: 'success'});\r\nmsg.Warning('style: <%= name %>', {name: 'warning'});\r\nmsg.Error  ('style: <%= name %>', {name: 'error'});\r\nmsg.Note   ('style: <%= name %>', {name: 'note'});\r\nmsg.Time   ('style: <%= name %>', {name: 'time'});\r\n```\r\n\r\n![screenshot](https://github.com/tamtakoe/gulp-msg/raw/master/example.png)\r\n\r\n## API\r\n#### info, success, warning, error, note, time\r\n\r\nFor example `info`\r\nUse `msg.info` for each file into the stream\r\n\r\n```js\r\ngulp.src('src/**/*')\r\n    .pipe(msg.info('Notice!')); //'Notice!' for each file\r\n```\r\n\r\nUse `msg.flush.info` at the and of the stream\r\n\r\n```js\r\ngulp.src('src/**/*')\r\n    .pipe(msg.flush.info('Notice!')); //'Notice!' at the and of stream\r\n```\r\n\r\nUse `msg.Info` from the outside of the stream\r\n\r\n```js\r\nmsg.Info('Notice!'); //'Notice!' in node.js application\r\n```\r\n\r\n### msg.info([before,] message, [after,] [data])\r\n\r\nShow message\r\n\r\n#### Parameters\r\n\r\n##### before\r\n##### after\r\nType: `String`\r\n\r\nDelimiter before/after the message. Each character is repeated 40 times\r\n\r\n#### Usage\r\n\r\n```js\r\nmsg.Info('--', 'Notice!', '*')\r\n```\r\n\r\n##### data\r\nType: `Object`\r\n\r\nData for message. Inherited values:\r\n\r\n<pre>\r\nenv           - process.env\r\nfile          - vinyl file\r\nfile.relative - relative path (extra field)\r\nfile.basename - basename (extra field)\r\nduration      - duration of streaming\r\ntotalDuration - duration from gulpfile start\r\n</pre>\r\n\r\n\r\n##### message\r\nType: `String`\r\n\r\nLodash template.\r\n\r\n#### Usage\r\n\r\n```js\r\nmsg.Info('Enviroment: <%= env.NODE_ENV %>. Foo: <%= foo %>', {foo: bar})\r\n//Enviroment: dev. Foo: bar\r\n```\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2014-2015 Oleg Istomin\r\nReleased under the MIT license\r\n\r\n***",
  "readmeFilename": "README.md",
  "_id": "gulp-msg@0.0.1",
  "dist": {
    "shasum": "88ad0bfc8a9b4fa83bdb7e01fe9fc18865495380"
  },
  "_from": "gulp-msg@",
  "_resolved": "https://registry.npmjs.org/gulp-msg/-/gulp-msg-0.0.1.tgz"
}
